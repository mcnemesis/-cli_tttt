.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "tttt" "1" "June 2024" "tttt 1.0.0" ""
.hy
.SH NAME
.PP
tttt - The TEA language interpreter
.SH SYNOPSIS
.PP
\f[B]tttt\f[R] [-h] [-d] [-i INPUT | -fi INPUT_FILE] [-c CODE | -fc
CODE_FILE]
.SH DESCRIPTION
.PP
\f[B]tttt\f[R] accepts any valid TEA program or script, and runs it,
leveraging standard input and output based on method of invocation.
.SH OPTIONS
.PP
TTTT is a command line interpreter for the TEA language that\[cq]s
capable of being run on the command line using the command style:
.RS
.PP
echo INPUT | tttt
.RE
.PP
For which INPUT could be any valid TEA program already containing its
input
.PP
Or with
.RS
.PP
echo INPUT | tttt -c TEAS
.RE
.PP
Where INPUT is treated as input data and the TEA program is read from
the string TEAS
.PP
Or with
.RS
.PP
echo INPUT | tttt -fc TEAS
.RE
.PP
Where INPUT is treated as input data and the TEA program is read from
the file path TEAS
.PP
Or with
.RS
.PP
tttt -i INPUT -c TEAS
.RE
.PP
Where INPUT is treated as input data and the TEA program is read from
the string TEAS
.PP
Or with
.RS
.PP
tttt -i INPUT -fc TEAS
.RE
.PP
Where INPUT is treated as input data and the TEA program is read from
the file path TEAS
.PP
Or with
.RS
.PP
tttt -fi INPUT -fc TEAS
.RE
.PP
Where INPUT is treated as data input file path and the TEA program is
read from the file path TEAS
.PP
In all situations, the TTTT interpreter executes the available TEA
program on the available input data and outputs the final result via
standard output, and does nothing else but quit.
.PP
As a final aspect of using CLI TTTT, note that we can expect that some
users shall wish to invoke/use TTTT in the context of other tools, or
rather, in sticking with the UNIX philosophy of building generic,
re-usable tools, we can expect that TTTT could process input from other
tools or produce output for other tools/processes.
In this regard, we should also note that CLI TTTT can use utilized as
such:
.RS
.PP
echo INPUT | tttt
.RE
.PP
In which case INPUT (or whatever it is that is piped to TTTT) shall get
treated as:
.IP "1." 3
DATA in case no other explicit data was specified to TTTT (like via the
-i or -fi arguments)
.IP "2." 3
CODE in case no explicit code was specified to TTTT (such as with -c or
-fc arguments)
.PP
And since TEA CODE can also carry its own data (as with the i: command),
this input could be both the DATA and CODE.
Try tttt -h or man tttt for more.
.SH EXAMPLES
.TP
\f[B]echo -n STAR | tttt -c aa:\f[R]
Takes the input word \[lq]STAR\[rq] and returns its anagrams such as
\[lq]RATS\[rq], \[lq]ARTS\[rq], etc
.TP
\f[B]echo -n STAR | tttt -c r:$:T\f[R]
Takes the input and replaces all line endings with the letter
\[lq]T\[rq], such as returning \[lq]START\[rq] in this example
.PP
More examples of TEA programs are included in the project\[cq]s Github:
https://github.com/mcnemesis/cli_tttt/tree/master/sample_TEA_programs
.SH AUTHORS
Joseph W. Lutalo.
